{"version":3,"sources":["components/PersonRow.tsx","components/PeopleTable.tsx","App.tsx","index.tsx"],"names":["PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","useState","peoples","setPeoples","peoplesError","setPeoplesrror","useEffect","fetch","then","res","json","catch","Response","Error","peopleFromServer","className","map","slug","App","getLinkClass","isActive","to","param","classNames","path","element","ReactDOM","render","document","getElementById"],"mappings":"gPAMaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxC,+BACE,6BAAKA,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,aACZ,6BAAKL,EAAOM,eAP0B,ECU7BC,EAAwB,WACnC,MAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAuCF,oBAAS,GAAhD,mBAAOG,EAAP,KAAqBC,EAArB,KAeA,OAbAC,qBAAU,WAZHC,MAFL,qEAGCC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,mBAFF,IAYJL,MAAK,SAAAM,GACA,UAAWA,EACbT,GAAe,GAKjBF,EAAWW,EACZ,GACJ,GAAE,IAGD,sCACIZ,IAAYE,GACZ,qBAAKW,UAAU,SAAf,SACE,qBAAKA,UAAU,uBAIjBb,GAAWE,GACX,qBAAKW,UAAU,wBAAf,+BAKDb,IAAYE,GACX,wBACEW,UAAU,qCADZ,UAGE,uBAAOA,UAAU,mBAAjB,SACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGb,EAAQc,KAAI,SAAAvB,GAAM,OACjB,cAAC,EAAD,CAAWA,OAAQA,GAAaA,EAAOwB,KADtB,WAQ9B,EC/DYC,G,MAAgB,WAC3B,IAAMC,EAAe,SAAC,GACpB,OADoE,EAA9CC,SACJ,UAAY,UAC/B,EAED,OACE,sBAAKL,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CACEM,GAAG,IACHN,UAAW,SAACO,GAAD,OAAWC,IAAW,SAAUJ,EAAaG,GAA7C,EAFb,kBAMA,cAAC,IAAD,CACED,GAAG,UACHN,UAAW,SAACO,GAAD,OAAWC,IAAW,SAAUJ,EAAaG,GAA7C,EAFb,uBAQF,eAAC,IAAD,WACE,cAAC,IAAD,CACEE,KAAK,IACLC,QACE,oBAAIV,UAAU,kBAAd,yBAMJ,cAAC,IAAD,CACES,KAAK,SACLC,QACE,qCACE,oBAAIV,UAAU,kBAAd,yBAIA,cAAC,EAAD,SAKN,cAAC,IAAD,CAAOS,KAAK,IAAIC,QAAQ,wBAI/B,GCnDDC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.c21cde33.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  person: People,\n}\n\nexport const PersonRow: React.FC<Props> = ({ person }) => (\n  <tr>\n    <td>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.motherName}</td>\n    <td>{person.fatherName}</td>\n  </tr>\n);\n","import React, { useEffect, useState } from 'react';\nimport { PersonRow } from './PersonRow';\n\nconst getPeople = (): Promise<People[]> => {\n  // eslint-disable-next-line max-len\n  const API_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\n  return fetch(API_URL)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n};\n\nexport const PeopleTable: React.FC = () => {\n  const [peoples, setPeoples] = useState<People[] | undefined>();\n  const [peoplesError, setPeoplesrror] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(peopleFromServer => {\n        if ('Error' in peopleFromServer) {\n          setPeoplesrror(true);\n\n          return;\n        }\n\n        setPeoples(peopleFromServer);\n      });\n  }, []);\n\n  return (\n    <>\n      {!peoples && !peoplesError && (\n        <div className=\"Loader\">\n          <div className=\"Loader__content\" />\n        </div>\n      )}\n\n      {!peoples && peoplesError && (\n        <div className=\"subtitle is-4 is- m-5\">\n          Peoples not found\n        </div>\n      )}\n\n      {peoples && !peoplesError && (\n        <table\n          className=\"PeopleTable table is-bordered ml-3\"\n        >\n          <thead className=\"table table-head\">\n            <tr>\n              <th>Name</th>\n              <td>Sex</td>\n              <td>Born</td>\n              <td>Died</td>\n              <td>Mother</td>\n              <td>Father</td>\n            </tr>\n          </thead>\n          <tbody>\n            {peoples.map(person => (\n              <PersonRow person={person} key={person.slug} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Routes, Route, NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { PeopleTable } from './components/PeopleTable';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }): string => {\n    return isActive ? 'is-info' : 'is-light';\n  };\n\n  return (\n    <div className=\"App\">\n      <nav className=\"buttons m-5\">\n        <NavLink\n          to=\"/\"\n          className={(param) => classNames('button', getLinkClass(param))}\n        >\n          Home\n        </NavLink>\n        <NavLink\n          to=\"/people\"\n          className={(param) => classNames('button', getLinkClass(param))}\n        >\n          People\n        </NavLink>\n      </nav>\n\n      <Routes>\n        <Route\n          path=\"/\"\n          element={(\n            <h1 className=\"title is-3 ml-5\">\n              Home page\n            </h1>\n          )}\n        />\n\n        <Route\n          path=\"people\"\n          element={(\n            <>\n              <h1 className=\"title is-3 ml-5\">\n                People page\n              </h1>\n\n              <PeopleTable />\n            </>\n          )}\n        />\n\n        <Route path=\"*\" element=\"Page not found\" />\n      </Routes>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}